

Tutorial 6

1. How key is derived from pass phrase Pretty Good Privacy?
Ans :
What is a passphrase?
Most people are familiar with restricting access to computer systems via a password, which is a unique string of characters that a user types in as an identification code.
A passphrase is a longer version of a password, and in theory, a more secure one. 
Typically composed of multiple words, a passphrase is more secure against standard dictionary attacks, 
wherein the attacker tries all the words in the dictionary in an attempt to determine your password. 
The best passphrases are relatively long and complex and contain a combination of upper and lowercase letters, numeric and punctuation characters.

PGP uses a passphrase to encrypt your private key on your machine. Your private key is encrypted on your disk using a hash of your passphrase as the secret key. 
You use the passphrase to decrypt and use your private key. A passphrase should be hard for you to forget and difficult for others to guess. 
It should be something already firmly embedded in your long-term memory, rather than something you make up from scratch. 
Why? Because if you forget your passphrase, you are out of luck. Your private key is totally and absolutely useless without your passphrase and nothing can be done about it. 
Remember the quote earlier in this chapter? PGP is cryptography that will keep major governments out of your files. 
It will certainly keep you out of your files, too. Keep that in mind when you decide to change your passphrase to the punchline of that joke you can never quite remember.

2. Explain Pretty Good Privacy message generation and reception process
Ans : 

1. Authentication: 
Authentication basically means something that is used to validate something as true or real. 
To login into some sites sometimes we give our account name and password, that is an authentication verification procedure. 
In the email world, checking the authenticity of an email is nothing but to check whether it actually came from the person it says. 
In emails, authentication has to be checked as there are some people who spoof the emails or some spams and sometimes it can cause a lot of inconvenience. 
The Authentication service in PGP is provided as follows: 

As shown in the above figure, the Hash Function (H) calculates the Hash Value of the message. For the hashing purpose, SHA-1 is used and it produces a 160 bit output hash value. 
Then, using the sender’s private key (KPa), it is encrypted and it’s called as Digital Signature. The Message is then appended to the signature. All the process happened till now, is sometimes described as signing the message . Then the message is compressed to reduce the transmission overhead and is sent over to the receiver. 
At the receiver’s end, the data is decompressed and the message, signature are obtained. 
The signature is then decrypted using the sender’s public key(PUa) and the hash value is obtained. 
The message is again passed to hash function and it’s hash value is calculated and obtained. 
Both the values, one from signature and another from the recent output of hash function are compared and if both are same, 
it means that the email is actually sent from a known one and is legit, else it means that it’s not a legit one. 

2. Confidentiality: 
Sometimes we see some packages labelled as ‘Confidential’, which means that those packages are not meant for all the people and only selected persons can see them. 
The same applies to the email confidentiality as well. Here, in the email service, only the sender and the receiver should be able to read the message, 
that means the contents have to be kept secret from every other person, except for those two. 
PGP provides that Confidentiality service in the following manner: The message is first compressed and a 128 bit session key (Ks), generated by the PGP, 
is used to encrypt the message through symmetric encryption. 
Then, the session key (Ks) itself gets encrypted through public key encryption (EP) using receiver’s public key(KUb) . 
Both the encrypted entities are now concatenated and sent to the receiver. 
As you can see, the original message was compressed and then encrypted initially and hence even if any one could get hold of the traffic, 
he cannot read the contents as they are not in readable form and they can only read them if they had the session key (Ks). Even though session key is transmitted to the receiver and hence, is in the traffic, it is in encrypted form and only the receiver’s private key (KPb)can be used to decrypt that and thus our message would be completely safe. 
At the receiver’s end, the encrypted session key is decrypted using receiver’s private key (KPb) and the message is decrypted with the obtained session key. 
Then, the message is decompressed to obtain the original message (M). 
RSA algorithm is used for the public-key encryption and for the symmetric jey encryption, CAST-128(or IDEA or 3DES) is used. 
Practically, both the Authentication and Confidentiality services are provided in parallel as follows : 

 





3. What are the Cryptographic algorithms used by S/MIME to provide different function? 

4. What are the steps for preparing an enveloped data MIME entity? 

5. Explain Secure Socket Layer (SSL) Handshake protocol action 

6. Explain IPSec Encapsulating Security






Tutorial 5


 1. Explain X.509 Certificate format

2. Explain hierarchy of Certificate Authorities (CA's). 

3. Why revocation of certification is required?

4. What are the reasons of revocation of a certificate before it expires?

5. Explain X.509 Version 3 certificate format




Tutorial 4


 1. Explain hash functions based on cipher block chaining.

2. Explain SHA-512 Logic with neat diagram.

3. Explain Message Authentication Code (MAC) based on block ciphers Data Authentication Algorithm (DAA) and Cipher Based Message Authentication Code (CMAC).

4. Explain Digital Signature Standard

